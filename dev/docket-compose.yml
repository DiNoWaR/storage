services:
  minio:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: myaccesskey
      MINIO_ROOT_PASSWORD: mysecretkey
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  create-bucket:
    image: quay.io/minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set local http://minio:9000 myaccesskey mysecretkey;
      mc mb local/my-default-bucket;
      mc policy set public local/my-default-bucket;
      echo 'Bucket created!';
      exit 0;
      "

  mongo:
    image: mongo:6
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: secret
      MONGO_INITDB_DATABASE: mydatabase
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongoadmin
      ME_CONFIG_MONGODB_ADMINPASSWORD: secret
      ME_CONFIG_MONGODB_URL: mongodb://mongoadmin:secret@mongo:27017/

  storage:
    build:
      context: ../
    container_name: storage
    ports:
      - "8080:8080"
    environment:
      SPRING_APPLICATION_NAME: storage
      SERVER_PORT: 8080
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: test_access_key
      MINIO_SECRET_KEY: test_secret_key
      MINIO_BUCKET: teletronics
      SPRING_DATA_MONGODB_URI: mongodb://mongoadmin:secret@mongo:27017/storage
    depends_on:
      - minio
      - mongo
    restart: always

volumes:
  minio_data:
  mongo_data:
